{"version":3,"sources":["webpack:///src/app/default-map/default-map.page.html","webpack:///src/app/default-map/default-map-routing.module.ts","webpack:///src/app/default-map/default-map.module.ts","webpack:///src/app/default-map/default-map.page.scss","webpack:///src/app/default-map/default-map.page.ts"],"names":["routes","path","component","DefaultMapPageRoutingModule","imports","forChild","exports","DefaultMapPageModule","providers","declarations","DefaultMapPage","geolocation","nativeGeocoder","zone","infoWindows","markers","title","latitude","longitude","GoogleAutocomplete","google","maps","places","AutocompleteService","autocomplete","input","autocompleteItems","console","log","setTimeout","mapRef","nativeElement","showMap","marker","position","LatLng","mapMarker","Marker","setMap","map","addInfoWindowToMarker","infoWindowContent","infoWindow","content","addListener","closeAllInfoWindows","open","push","window","close","getCurrentPosition","then","resp","latLng","coords","mapOptions","center","zoom","getAddressFromCoords","Map","lat","lng","addMarkersToMap","error","lattitude","options","useLocale","maxResults","reverseGeocode","result","address","responseAddress","Object","entries","key","value","length","reverse","slice","alert","getPlacePredictions","predictions","status","run","forEach","prediction","item","JSON","stringify","placeid","place_id","location","href","read","selector","template"],"mappings":"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","file":"default-map-default-map-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-searchbar [(ngModel)]=\\\"autocomplete.input\\\" (ionInput)=\\\"UpdateSearchResults()\\\" placeholder=\\\"Search for a place\\\"  (ionClear)=\\\"ClearAutocomplete()\\\"></ion-searchbar>\\n  </ion-toolbar>\\n  <ion-list [hidden]=\\\"autocompleteItems.length == 0\\\">\\n    <ion-item *ngFor=\\\"let item of autocompleteItems\\\" tappable (click)=\\\"SelectSearchResult(item)\\\">\\n      {{ item.description }}\\n    </ion-item>\\n  </ion-list>\\n  <ion-toolbar color=\\\"warning\\\">\\n    <ion-button (click)=\\\"showMap()\\\" shape=\\\"round\\\" color=\\\"dark\\\">\\n      <ion-icon slot=\\\"start\\\" name=\\\"locate\\\"></ion-icon>\\n      Where I Am\\n    </ion-button>\\n    <ion-title slot=\\\"end\\\">Google Map</ion-title>\\n  </ion-toolbar>\\n\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n\\n  <ion-content> \\n    <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\n      <ion-fab-button (click)=\\\"ShowCords()\\\" ion-fab color=\\\"tertiary\\\">\\n        <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n      </ion-fab-button>\\n    </ion-fab>\\n    <div class=\\\"map-wrapper\\\" style=\\\"height: 100%;\\\">      \\n      <div id=\\\"map_center\\\">\\n        <ion-icon name=\\\"pin\\\" size=\\\"large\\\" color=\\\"danger\\\"></ion-icon>      \\n      </div>\\n      <div #map id=\\\"map\\\"  style=\\\"height: 100%;\\\"></div>\\n    </div>   \\n\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size=\\\"3\\\">\\n        <b>Lattitude</b>\\n      </ion-col>\\n      <ion-col>\\n        {{latitude}}\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col size=\\\"3\\\">\\n        <b>Longitude</b>\\n      </ion-col>\\n      <ion-col>\\n        {{longitude}}\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col size=\\\"3\\\">\\n        <b>Address</b>\\n      </ion-col>\\n      <ion-col>\\n        {{address}}\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DefaultMapPage } from './default-map.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DefaultMapPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DefaultMapPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DefaultMapPageRoutingModule } from './default-map-routing.module';\n\nimport { DefaultMapPage } from './default-map.page';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { NativeGeocoder } from '@ionic-native/native-geocoder/ngx';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DefaultMapPageRoutingModule\n  ],\n  providers:[\n    Geolocation,\n    NativeGeocoder,\n  ],\n  declarations: [DefaultMapPage]\n})\nexport class DefaultMapPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlZmF1bHQtbWFwL2RlZmF1bHQtbWFwLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild, ElementRef, NgZone } from '@angular/core';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { NativeGeocoder, NativeGeocoderResult, NativeGeocoderOptions } from '@ionic-native/native-geocoder/ngx';\n\n\ndeclare var google:any;\n\n@Component({\n  selector: 'app-default-map',\n  templateUrl: './default-map.page.html',\n  styleUrls: ['./default-map.page.scss'],\n})\nexport class DefaultMapPage implements OnInit {\n\n  @ViewChild('map', {read: ElementRef, static:false}) mapRef: ElementRef;\n  map:any; \n  infoWindows : any = []\n  markers: any = [{\n    title: \"Marke #1\",\n    latitude : \"-20.839217\",\n    longitude: \"-41.128867\"\n  },\n  {\n    title: \"Marke #2\",\n    latitude : \"-20.848167\",\n    longitude: \"-41.130426\"\n  },\n  {\n    title: \"Marke #3\",\n    latitude : \"-20.852399\",\n    longitude: \"-41.128194\"\n  }]; \n  //preencher com json {label:data, label: data},{label:data, label: data}\n  address: string;\n  latitude: number;\n  longitude: number;\n  autocomplete: {input:string;};\n  autocompleteItems: any[];\n  location: any;\n  placeid: any;\n  GoogleAutocomplete: any;\n\n  constructor(private geolocation: Geolocation,\n    private nativeGeocoder: NativeGeocoder,\n    public zone: NgZone) { this.GoogleAutocomplete = new google.maps.places.AutocompleteService();\n      this.autocomplete = {input: ''};\n      this.autocompleteItems = []; }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    console.log(\"afterinit\");\n    setTimeout(() => {\n      console.log(this.mapRef.nativeElement);\n      this.showMap();\n    }, 1000);\n  }\n\n  addMarkersToMap(markers){\n    for (let marker of markers){\n      let position = new google.maps.LatLng(marker.latitude, marker.longitude);\n      let mapMarker = new google.maps.Marker({\n        position: position,\n        title: marker.title,\n        latitude: marker.latitude,\n        longitude: marker.longitude\n      });\n\n      mapMarker.setMap(this.map);\n      this.addInfoWindowToMarker(mapMarker);\n    }\n  }\n\n  addInfoWindowToMarker(marker){\n    let infoWindowContent = '<div id=\"content\">'+\n                              '<h2 id=\"firstHeading\" class=\"firstHeading\">'+ marker.title + '</h2>'+\n                              '<p>Latitude: '+ marker.latitude + '</p>' +\n                              '<p>Longitude: '+ marker.longitude + '</p>'+\n                             '</div>'; \n    \n    let infoWindow = new google.maps.infoWindow({\n      content: infoWindowContent\n    });\n\n    marker.addListener('click', ()=>{\n      this.closeAllInfoWindows();\n      infoWindow.open(this.map, marker);\n    });\n    this.infoWindows.push(infoWindow)\n  }\n\n  closeAllInfoWindows(){\n    for (let window of this.infoWindows){\n      window.close();\n    }\n  }\n\n  showMap(){\n    this.geolocation.getCurrentPosition().then((resp) => {\n\n      this.latitude = -20.839217;//resp.coords.latitude;\n      this.longitude = -41.128867;//resp.coords.longitude;\n\n      let latLng = new google.maps.LatLng(resp.coords.latitude, resp.coords.longitude);\n      let mapOptions = {\n        center: latLng,\n        zoom: 15\n      }\n      this.getAddressFromCoords(resp.coords.latitude, resp.coords.longitude);\n      this.map = new google.maps.Map(this.mapRef.nativeElement, mapOptions);\n\n      this.map.addListener('dragend', () => {\n        console.log('accuray',this.map,this.map.center.lat());\n        this.latitude = this.map.center.lat();\n        this.longitude = this.map.center.lng();\n        this.getAddressFromCoords(this.map.center.lat(), this.map.center.lng())\n      });\n      this.addMarkersToMap(this.markers);\n    }).catch((error) => {\n      console.log('Error getting location', error);\n    });\n    \n  }\n\n  getAddressFromCoords(lattitude, longitude) {\n    console.log(\"getAddressFromCoords \" + lattitude + \" \" + longitude);\n    let options: NativeGeocoderOptions = {\n      useLocale: true,\n      maxResults: 5\n    };\n\n    this.nativeGeocoder.reverseGeocode(lattitude, longitude, options)\n      .then((result: NativeGeocoderResult[]) => {\n        this.address = \"\";\n        let responseAddress = [];\n        for (let [key, value] of Object.entries(result[0])) {\n          if (value.length > 0)\n            responseAddress.push(value);\n        }\n        responseAddress.reverse();\n        for (let value of responseAddress) {\n          this.address += value + \", \";\n        }\n        this.address = this.address.slice(0, -2);\n      })\n      .catch((error: any) => {\n        this.address = \"Address Not Available!\";\n      });\n  }\n\n  ShowCards(){\n    alert('lat' +this.latitude+' ,long'+this.longitude);\n  }\n\n  UpdateSearchResults(){\n    if (this.autocomplete.input == '') {\n      this.autocompleteItems = [];\n      return;\n    }\n    this.GoogleAutocomplete.getPlacePredictions({ input: this.autocomplete.input },\n    (predictions, status) => {\n      this.autocompleteItems = [];\n      this.zone.run(() => {\n        predictions.forEach((prediction) => {\n          this.autocompleteItems.push(prediction);\n        });\n      });\n    });\n  }\n\n  SelectSearchResult(item) {\n    ///WE CAN CONFIGURE MORE COMPLEX FUNCTIONS SUCH AS UPLOAD DATA TO FIRESTORE OR LINK IT TO SOMETHING\n    alert(JSON.stringify(item))      \n    this.placeid = item.place_id\n  }\n\n  GoTo(){\n    return window.location.href = 'https://www.google.com/maps/search/?api=1&query=Google&query_place_id='+this.placeid;\n  }\n\n}\n"]}