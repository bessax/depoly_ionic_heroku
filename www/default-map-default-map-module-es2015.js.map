{"version":3,"sources":["./src/app/default-map/default-map.page.html","./src/app/default-map/default-map-routing.module.ts","./src/app/default-map/default-map.module.ts","./src/app/default-map/default-map.page.scss","./src/app/default-map/default-map.page.ts"],"names":[],"mappings":"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","file":"default-map-default-map-module-es2015.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-searchbar [(ngModel)]=\\\"autocomplete.input\\\" (ionInput)=\\\"UpdateSearchResults()\\\" placeholder=\\\"Search for a place\\\"  (ionClear)=\\\"ClearAutocomplete()\\\"></ion-searchbar>\\n  </ion-toolbar>\\n  <ion-list [hidden]=\\\"autocompleteItems.length == 0\\\">\\n    <ion-item *ngFor=\\\"let item of autocompleteItems\\\" tappable (click)=\\\"SelectSearchResult(item)\\\">\\n      {{ item.description }}\\n    </ion-item>\\n  </ion-list>\\n  <ion-toolbar color=\\\"warning\\\">\\n    <ion-button (click)=\\\"showMap()\\\" shape=\\\"round\\\" color=\\\"dark\\\">\\n      <ion-icon slot=\\\"start\\\" name=\\\"locate\\\"></ion-icon>\\n      Where I Am\\n    </ion-button>\\n    <ion-title slot=\\\"end\\\">Google Map</ion-title>\\n  </ion-toolbar>\\n\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n\\n  <ion-content> \\n    <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\n      <ion-fab-button (click)=\\\"ShowCords()\\\" ion-fab color=\\\"tertiary\\\">\\n        <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n      </ion-fab-button>\\n    </ion-fab>\\n    <div class=\\\"map-wrapper\\\" style=\\\"height: 100%;\\\">      \\n      <div id=\\\"map_center\\\">\\n        <ion-icon name=\\\"pin\\\" size=\\\"large\\\" color=\\\"danger\\\"></ion-icon>      \\n      </div>\\n      <div #map id=\\\"map\\\"  style=\\\"height: 100%;\\\"></div>\\n    </div>   \\n\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size=\\\"3\\\">\\n        <b>Lattitude</b>\\n      </ion-col>\\n      <ion-col>\\n        {{latitude}}\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col size=\\\"3\\\">\\n        <b>Longitude</b>\\n      </ion-col>\\n      <ion-col>\\n        {{longitude}}\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col size=\\\"3\\\">\\n        <b>Address</b>\\n      </ion-col>\\n      <ion-col>\\n        {{address}}\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DefaultMapPage } from './default-map.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DefaultMapPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DefaultMapPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DefaultMapPageRoutingModule } from './default-map-routing.module';\n\nimport { DefaultMapPage } from './default-map.page';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { NativeGeocoder } from '@ionic-native/native-geocoder/ngx';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DefaultMapPageRoutingModule\n  ],\n  providers:[\n    Geolocation,\n    NativeGeocoder,\n  ],\n  declarations: [DefaultMapPage]\n})\nexport class DefaultMapPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlZmF1bHQtbWFwL2RlZmF1bHQtbWFwLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild, ElementRef, NgZone } from '@angular/core';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { NativeGeocoder, NativeGeocoderResult, NativeGeocoderOptions } from '@ionic-native/native-geocoder/ngx';\n\n\ndeclare var google:any;\n\n@Component({\n  selector: 'app-default-map',\n  templateUrl: './default-map.page.html',\n  styleUrls: ['./default-map.page.scss'],\n})\nexport class DefaultMapPage implements OnInit {\n\n  @ViewChild('map', {read: ElementRef, static:false}) mapRef: ElementRef;\n  map:any; \n  infoWindows : any = []\n  markers: any = [{\n    title: \"Marke #1\",\n    latitude : \"-20.839217\",\n    longitude: \"-41.128867\"\n  },\n  {\n    title: \"Marke #2\",\n    latitude : \"-20.848167\",\n    longitude: \"-41.130426\"\n  },\n  {\n    title: \"Marke #3\",\n    latitude : \"-20.852399\",\n    longitude: \"-41.128194\"\n  }]; \n  //preencher com json {label:data, label: data},{label:data, label: data}\n  address: string;\n  latitude: number;\n  longitude: number;\n  autocomplete: {input:string;};\n  autocompleteItems: any[];\n  location: any;\n  placeid: any;\n  GoogleAutocomplete: any;\n\n  constructor(private geolocation: Geolocation,\n    private nativeGeocoder: NativeGeocoder,\n    public zone: NgZone) { this.GoogleAutocomplete = new google.maps.places.AutocompleteService();\n      this.autocomplete = {input: ''};\n      this.autocompleteItems = []; }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    console.log(\"afterinit\");\n    setTimeout(() => {\n      console.log(this.mapRef.nativeElement);\n      this.showMap();\n    }, 1000);\n  }\n\n  addMarkersToMap(markers){\n    for (let marker of markers){\n      let position = new google.maps.LatLng(marker.latitude, marker.longitude);\n      let mapMarker = new google.maps.Marker({\n        position: position,\n        title: marker.title,\n        latitude: marker.latitude,\n        longitude: marker.longitude\n      });\n\n      mapMarker.setMap(this.map);\n      this.addInfoWindowToMarker(mapMarker);\n    }\n  }\n\n  addInfoWindowToMarker(marker){\n    let infoWindowContent = '<div id=\"content\">'+\n                              '<h2 id=\"firstHeading\" class=\"firstHeading\">'+ marker.title + '</h2>'+\n                              '<p>Latitude: '+ marker.latitude + '</p>' +\n                              '<p>Longitude: '+ marker.longitude + '</p>'+\n                             '</div>'; \n    \n    let infoWindow = new google.maps.infoWindow({\n      content: infoWindowContent\n    });\n\n    marker.addListener('click', ()=>{\n      this.closeAllInfoWindows();\n      infoWindow.open(this.map, marker);\n    });\n    this.infoWindows.push(infoWindow)\n  }\n\n  closeAllInfoWindows(){\n    for (let window of this.infoWindows){\n      window.close();\n    }\n  }\n\n  showMap(){\n    this.geolocation.getCurrentPosition().then((resp) => {\n\n      this.latitude = -20.839217;//resp.coords.latitude;\n      this.longitude = -41.128867;//resp.coords.longitude;\n\n      let latLng = new google.maps.LatLng(resp.coords.latitude, resp.coords.longitude);\n      let mapOptions = {\n        center: latLng,\n        zoom: 15\n      }\n      this.getAddressFromCoords(resp.coords.latitude, resp.coords.longitude);\n      this.map = new google.maps.Map(this.mapRef.nativeElement, mapOptions);\n\n      this.map.addListener('dragend', () => {\n        console.log('accuray',this.map,this.map.center.lat());\n        this.latitude = this.map.center.lat();\n        this.longitude = this.map.center.lng();\n        this.getAddressFromCoords(this.map.center.lat(), this.map.center.lng())\n      });\n      this.addMarkersToMap(this.markers);\n    }).catch((error) => {\n      console.log('Error getting location', error);\n    });\n    \n  }\n\n  getAddressFromCoords(lattitude, longitude) {\n    console.log(\"getAddressFromCoords \" + lattitude + \" \" + longitude);\n    let options: NativeGeocoderOptions = {\n      useLocale: true,\n      maxResults: 5\n    };\n\n    this.nativeGeocoder.reverseGeocode(lattitude, longitude, options)\n      .then((result: NativeGeocoderResult[]) => {\n        this.address = \"\";\n        let responseAddress = [];\n        for (let [key, value] of Object.entries(result[0])) {\n          if (value.length > 0)\n            responseAddress.push(value);\n        }\n        responseAddress.reverse();\n        for (let value of responseAddress) {\n          this.address += value + \", \";\n        }\n        this.address = this.address.slice(0, -2);\n      })\n      .catch((error: any) => {\n        this.address = \"Address Not Available!\";\n      });\n  }\n\n  ShowCards(){\n    alert('lat' +this.latitude+' ,long'+this.longitude);\n  }\n\n  UpdateSearchResults(){\n    if (this.autocomplete.input == '') {\n      this.autocompleteItems = [];\n      return;\n    }\n    this.GoogleAutocomplete.getPlacePredictions({ input: this.autocomplete.input },\n    (predictions, status) => {\n      this.autocompleteItems = [];\n      this.zone.run(() => {\n        predictions.forEach((prediction) => {\n          this.autocompleteItems.push(prediction);\n        });\n      });\n    });\n  }\n\n  SelectSearchResult(item) {\n    ///WE CAN CONFIGURE MORE COMPLEX FUNCTIONS SUCH AS UPLOAD DATA TO FIRESTORE OR LINK IT TO SOMETHING\n    alert(JSON.stringify(item))      \n    this.placeid = item.place_id\n  }\n\n  GoTo(){\n    return window.location.href = 'https://www.google.com/maps/search/?api=1&query=Google&query_place_id='+this.placeid;\n  }\n\n}\n"],"sourceRoot":"webpack:///"}