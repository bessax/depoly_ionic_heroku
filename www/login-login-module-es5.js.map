{"version":3,"sources":["webpack:///src/app/login/login.page.html","webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login.page.scss","webpack:///src/app/login/login.page.ts","webpack:///src/app/services/auhentication.service.ts","webpack:///src/app/services/loader.service.ts","webpack:///src/app/services/localstorage.service.ts"],"names":["routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","LoginPage","formBuilder","authenticationservice","atrCtrl","router","authentication","pusername","ionicForm","get","value","puserpassword","uData","companyLogin","companyPassword","userAuthentication","e","console","log","erro","create","header","subHeader","message","buttons","alert","present","username","userpass","authenticated","selector","template","AuthenticationService","httpClient","nativeHTTP","localstorageservice","route","loaderservice","companyservice","alertController","httpOpions","headers","err","cssClass","id","token","getCompanyById","toPromise","companyReturn","setValue","navigate","userData","error","showLoader","post","apiAuthentication","then","res","data","hideLoader","handleError","errorAlert","user","getCompanyData","errorMessage","ErrorEvent","status","providedIn","LoaderService","loadingController","duration","onDidDismiss","dis","dismiss","LocalstorageService","storage","key","val","set","getValue"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,sBAAsB;AAAA;AAAA,O;;AAAtBA,4BAAsB,6DAJlC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIkC,GAAtBH,sBAAsB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCIAI,eAAe;AAAA;AAAA,O;;AAAfA,qBAAe,6DAV3B,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,0DAJO,EAKP,4EALO,CADD;AAQRI,oBAAY,EAAE,CAAC,qDAAD;AARN,OAAT,CAU2B,GAAfD,eAAe,CAAf;;;;;;;;;;;;;;;;ACpBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCaFE,SAAS;AAYpB,2BAAmBC,WAAnB,EAAqDC,qBAArD,EACSC,OADT,EAC2CC,MAD3C,EAC0D;AAAA;;AADvC,eAAAH,WAAA,GAAAA,WAAA;AAAkC,eAAAC,qBAAA,GAAAA,qBAAA;AAC5C,eAAAC,OAAA,GAAAA,OAAA;AAAkC,eAAAC,MAAA,GAAAA,MAAA;AAN3C,eAAAC,cAAA,GAAiB,EAAjB;AAM6D;;AAbzC;AAAA;AAAA,uCAeV;AACR,iBAAKC,SAAL,GAAiB,KAAKC,SAAL,CAAeC,GAAf,CAAmB,UAAnB,EAA+BC,KAAhD;AACA,iBAAKC,aAAL,GAAqB,KAAKH,SAAL,CAAeC,GAAf,CAAmB,UAAnB,EAA+BC,KAApD;;AACA,gBAAG;AACD,kBAAIE,KAAK,GAAG;AACVC,4BAAY,EAAE,KAAKN,SADT;AAEVO,+BAAe,EAAE,KAAKH;AAFZ,eAAZ;AAIA,mBAAKR,qBAAL,CAA2BY,kBAA3B,CAA8CH,KAA9C;AACD,aAND,CAMC,OAAMI,CAAN,EAAQ;AACPC,qBAAO,CAACC,GAAR,CAAY,UAAQF,CAApB;AACD;AACF;AA3BmB;AAAA;AAAA,iDA6BSG,IA7BT,EA6BiB;;;;;;;;AACrB,6BAAM,KAAKf,OAAL,CAAagB,MAAb,CAAoB;AACtCC,8BAAM,EAAC,UAD+B;AAEtCC,iCAAS,EAAC,qBAF4B;AAGtCC,+BAAO,EAAEJ,IAH6B;AAItCK,+BAAO,EAAE,CAAC,IAAD;AAJ6B,uBAApB,CAAN;;;AAARC,2B;AAMNA,2BAAK,CAACC,OAAN;;;;;;;;;AACD;AArCmB;AAAA;AAAA,qCAuCT;AACT,iBAAKlB,SAAL,GAAiB,IAAI,wDAAJ,CAAc;AAC7BmB,sBAAQ,EAAE,IAAI,0DAAJ,EADmB;AAE7BC,sBAAQ,EAAE,IAAI,0DAAJ;AAFmB,aAAd,CAAjB;AAIA,iBAAKC,aAAL,GAAqB,KAArB;AACD;AA7CmB;;AAAA;AAAA,S;;;;gBAZF;;gBAKX;;gBAHA;;gBADA;;;;AAWI5B,eAAS,6DALrB,gEAAU;AACT6B,gBAAQ,EAAE,WADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,4FAFS;;;;AAAA,OAAV,CAKqB,GAAT9B,SAAS,CAAT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCCA+B,qBAAqB;AAKhC,uCAAoBC,UAApB,EAAoDC,UAApD,EACUC,mBADV,EAC6DC,KAD7D,EAEUC,aAFV,EAEgDC,cAFhD,EAGSC,eAHT,EAG2C;AAAA;;AAHvB,eAAAN,UAAA,GAAAA,UAAA;AAAgC,eAAAC,UAAA,GAAAA,UAAA;AAC1C,eAAAC,mBAAA,GAAAA,mBAAA;AAAmD,eAAAC,KAAA,GAAAA,KAAA;AACnD,eAAAC,aAAA,GAAAA,aAAA;AAAsC,eAAAC,cAAA,GAAAA,cAAA;AACvC,eAAAC,eAAA,GAAAA,eAAA,CAAkC,CAE3C;;AACA,eAAAC,UAAA,GAAa;AACXC,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC,8BAAe;AAAhB,aAAhB;AADE,WAAb;AAH8C;;AARd;AAAA;AAAA,qCAefC,GAfe,EAeH;;;;;;;;AACb,6BAAM,KAAKH,eAAL,CAAqBnB,MAArB,CAA4B;AAC9CuB,gCAAQ,EAAE,iBADoC;AAE9CtB,8BAAM,EAAE,OAFsC;AAG9CC,iCAAS,EAAE,4BAHmC;AAI9CC,+BAAO,EAAE,oBAAkBmB,GAJmB;AAK9ClB,+BAAO,EAAE,CAAC,IAAD;AALqC,uBAA5B,CAAN;;;AAARC,2B;;AAQN,6BAAMA,KAAK,CAACC,OAAN,EAAN;;;;;;;;;AACD;AAzB+B;AAAA;AAAA,yCA2BXkB,EA3BW,EA2BAC,KA3BA,EA2BY;;;;;;;;AACtB,6BAAM,KAAKP,cAAL,CAAoBQ,cAApB,CAAmCF,EAAnC,EAAuCC,KAAvC,EAA8CE,SAA9C,EAAN;;;AAAhBC,mC;AACJ,2BAAKb,mBAAL,CAAyBc,QAAzB,CAAkC,aAAlC,EAAiDD,aAAa,CAAC,aAAD,CAA9D;AACA,2BAAKb,mBAAL,CAAyBc,QAAzB,CAAkC,cAAlC,EAAkDD,aAAa,CAAC,cAAD,CAA/D;AACA,2BAAKb,mBAAL,CAAyBc,QAAzB,CAAkC,oBAAlC,EAAwDD,aAAa,CAAC,oBAAD,CAArE;AACA,2BAAKb,mBAAL,CAAyBc,QAAzB,CAAkC,kBAAlC,EAAsDD,aAAa,CAAC,kBAAD,CAAnE;AACA,2BAAKb,mBAAL,CAAyBc,QAAzB,CAAkC,kBAAlC,EAAsDD,aAAa,CAAC,WAAD,CAAnE;AACA/B,6BAAO,CAACC,GAAR,CAAY8B,aAAa,CAAC,WAAD,CAAzB;;AACA,0BAAIA,aAAa,CAAC,WAAD,CAAjB,EAA+B;AAC7B,6BAAKZ,KAAL,CAAWc,QAAX,CAAoB,CAAC,aAAD,CAApB;AACD,uBAFD,MAEK;AACH,6BAAKd,KAAL,CAAWc,QAAX,CAAoB,CAAC,kBAAD,CAApB;AACD;;;;;;;;;AACF,WAxC+B,CAyChC;;AAzCgC;AAAA;AAAA,6CA0CPC,QA1CO,EA0CK;;;;;;;;;AAC/BC,2B,GAAQ,K;AAEZ,2BAAKf,aAAL,CAAmBgB,UAAnB;;AACA,6BAAM,KAAKpB,UAAL,CAAgBqB,IAAhB,CAAqB,sEAAYC,iBAAjC,EAAoDJ,QAApD,EAA8DJ,SAA9D,GACLS,IADK,CACA,UAAAC,GAAG,EAAI;AACXL,6BAAK,GAAG,KAAR;AACAM,4BAAI,GAAGD,GAAP;AACD,uBAJK,WAIG,UAAAf,GAAG,EAAI;AACdU,6BAAK,GAAG,IAAR;;AACA,6BAAI,CAACf,aAAL,CAAmBsB,UAAnB;;AACA,6BAAI,CAACC,WAAL,CAAiBlB,GAAjB;;AACA,6BAAI,CAACmB,UAAL,CAAgB,yDAAhB;AACD,uBATK,CAAN;;;AAWA,0BAAI,CAACT,KAAL,EAAW;AACT,4BAAIM,IAAI,CAAC,OAAD,CAAJ,KAAkB,EAAtB,EAAyB;AACvB,+BAAKrB,aAAL,CAAmBsB,UAAnB;AACIG,8BAFmB,GAEZJ,IAAI,CAAC,MAAD,CAFQ;AAGvB,+BAAKvB,mBAAL,CAAyBc,QAAzB,CAAkC,OAAlC,EAA0CS,IAAI,CAAC,OAAD,CAA9C;AACA,+BAAKvB,mBAAL,CAAyBc,QAAzB,CAAkC,QAAlC,EAA2Ca,IAAI,CAAC,WAAD,CAA/C;AACA,+BAAKC,cAAL,CAAoBD,IAAI,CAAC,WAAD,CAAxB,EAAsCJ,IAAI,CAAC,OAAD,CAA1C,EALuB,CAMvB;AACD;AACF;;;;;;;;;AACF;AAED;;;;;;;;;;;;;;AAkBA;;AAvFgC;AAAA;AAAA,sCAwFpBN,KAxFoB,EAwFM;AACpC,kFAAYP,KAAZ,GAAoB,EAApB;AACA,gBAAImB,YAAY,GAAG,EAAnB;;AACA,gBAAIZ,KAAK,CAACA,KAAN,YAAuBa,UAA3B,EAAuC;AACrC;AACAD,0BAAY,GAAGZ,KAAK,CAACA,KAAN,CAAY7B,OAA3B;AACD,aAHD,MAGO;AACL;AACAyC,0BAAY,GAAG,6BAAmBZ,KAAK,CAACc,MAAzB,+BAAoDd,KAAK,CAAC7B,OAA1D,CAAf;AACD;;AACDN,mBAAO,CAACC,GAAR,CAAY8C,YAAZ;AACA,mBAAO,wDAAWA,YAAX,CAAP;AACD;AApG+B;;AAAA;AAAA,S;;;;gBAbzB;;gBAEA;;gBAEA;;gBACA;;gBACA;;gBACA;;gBACA;;;;AAKIhC,2BAAqB,6DAHjC,iEAAW;AACVmC,kBAAU,EAAE;AADF,OAAX,CAGiC,GAArBnC,qBAAqB,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCRAoC,aAAa;AAExB,+BAAmBC,iBAAnB,EAAyD;AAAA;;AAAtC,eAAAA,iBAAA,GAAAA,iBAAA;AAAyC;;AAFpC;AAAA;AAAA,+CAIH;AAEnB,iBAAKA,iBAAL,CAAuBjD,MAAvB,CAA8B;AAC5BG,qBAAO,EAAE,yCADmB;AAE5B+C,sBAAQ,EAAE;AAFkB,aAA9B,EAGGd,IAHH,CAGQ,UAACC,GAAD,EAAS;AACfA,iBAAG,CAAC/B,OAAJ;AAEA+B,iBAAG,CAACc,YAAJ,GAAmBf,IAAnB,CAAwB,UAACgB,GAAD,EAAS;AAC/BvD,uBAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDsD,GAAlD;AACD,eAFD;AAGD,aATD;AAWD,WAjBuB,CAmBxB;;AAnBwB;AAAA;AAAA,uCAoBX;AAEX,iBAAKH,iBAAL,CAAuBjD,MAAvB,CAA8B;AAC5BG,qBAAO,EAAE;AADmB,aAA9B,EAEGiC,IAFH,CAEQ,UAACC,GAAD,EAAS;AACfA,iBAAG,CAAC/B,OAAJ;AACD,aAJD;AAMD,WA5BuB,CA8BxB;;AA9BwB;AAAA;AAAA,uCA+BX;AACX,iBAAK2C,iBAAL,CAAuBI,OAAvB,GAAiCjB,IAAjC,CAAsC,UAACC,GAAD,EAAS;AAC7CxC,qBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCuC,GAAlC;AACD,aAFD,WAES,UAACL,KAAD,EAAW;AAClBnC,qBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBkC,KAArB;AACD,aAJD;AAMD;AAtCuB;;AAAA;AAAA,S;;;;gBALjB;;;;AAKIgB,mBAAa,6DAHzB,iEAAW;AACVD,kBAAU,EAAE;AADF,OAAX,CAGyB,GAAbC,aAAa,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCAAM,mBAAmB;AAE9B,qCAAoBC,OAApB,EAAqC;AAAA;;AAAjB,eAAAA,OAAA,GAAAA,OAAA;AAAoB;;AAFV;AAAA;AAAA,mCAIfC,GAJe,EAIL;;;;;;;;AAEvB,6BAAM,KAAKD,OAAL,CAAalE,GAAb,CAAiBmE,GAAjB,EAAsBpB,IAAtB,CAA2B,UAACqB,GAAD,EAAS;AACxC5D,+BAAO,CAACC,GAAR,CAAY,SAAO0D,GAAP,GAAW,IAAX,GAAgBC,GAA5B;AACAnB,4BAAI,GAAGmB,GAAP;AACD,uBAHK,WAIC,UAACnC,GAAD,EAAO;AACZzB,+BAAO,CAACC,GAAR,CAAY,mBAAiB0D,GAAjB,GAAqB,GAArB,GAAyBlC,GAArC;AACD,uBANK,CAAN;;;wDAOOgB,I;;;;;;;;;AACR;AAd6B;AAAA;AAAA,mCAgBrBkB,GAhBqB,EAgBTlE,KAhBS,EAgBA;AAAA;;AAC5B,iBAAKiE,OAAL,CAAaG,GAAb,CAAiBF,GAAjB,EAAsBlE,KAAtB,EAA6B8C,IAA7B,CAAkC,UAACC,GAAD,EAAQ;AACxCxC,qBAAO,CAACC,GAAR,CAAY,SAAO0D,GAAP,GAAW,GAAX,GAAenB,GAA3B;;AACA,oBAAI,CAACsB,QAAL,CAAcH,GAAd;AACD,aAHD,WAGS,UAAClC,GAAD,EAAS;AAChBzB,qBAAO,CAACC,GAAR,CAAY,mBAAiB0D,GAAjB,GAAqB,GAArB,GAAyBlC,GAArC;AACD,aALD;AAQD;AAzB6B;;AAAA;AAAA,S;;;;gBALvB;;;;AAKIgC,yBAAmB,6DAH/B,iEAAW;AACVP,kBAAU,EAAE;AADF,OAAX,CAG+B,GAAnBO,mBAAmB,CAAnB","file":"login-login-module-es5.js","sourcesContent":["export default \"<ion-content>\\n  <img src='../../../assets/logos/couter_logo_t.png' alt=\\\"APP Logo\\\" class=\\\"center\\\"/>\\n\\n<ion-list>\\n\\n  <form [formGroup]=\\\"ionicForm\\\" (ngSubmit)=\\\"submitForm()\\\" novalidate>\\n    <ion-item>\\n      <ion-icon name=\\\"person-outline\\\"></ion-icon>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"username\\\"></ion-input>\\n    </ion-item>\\n  \\n    <ion-item>\\n      <ion-icon name=\\\"key-outline\\\"></ion-icon>\\n      <ion-input type=\\\"password\\\" formControlName=\\\"userpass\\\"></ion-input>\\n    </ion-item>\\n\\n    <div>\\n      <ion-button type=\\\"submit\\\" expand=\\\"block\\\">Log In</ion-button>\\n    </div>\\n  </form>\\n\\n</ion-list>\\n<div>\\n  <br>\\n  <ion-router-link href=\\\"./signup\\\" class=\\\"linkunderline\\\">Forgot password</ion-router-link>\\n  <br>\\n  <ion-router-link href=\\\"./presignin\\\" class=\\\"linkunderline\\\">Register an account</ion-router-link>\\n</div>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \"ion-content {\\n  --background: url('background.png');\\n}\\n\\nion-list {\\n  --ion-background-color:#FAFAFA;\\n}\\n\\n.center {\\n  display: block;\\n  margin-left: auto;\\n  margin-right: auto;\\n  width: 50%;\\n  padding-top: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksbUNBQUE7QUFDSjs7QUFFQTtFQUNJLDhCQUFBO0FBQ0o7O0FBQ0E7RUFDSSxjQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLFVBQUE7RUFDQSxpQkFBQTtBQUVKIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnR7XG4gICAgLS1iYWNrZ3JvdW5kOiB1cmwoJy4uLy4uL2Fzc2V0cy9pbWFnZXMvYmFja2dyb3VuZC5wbmcnKTtcbn1cblxuaW9uLWxpc3R7XG4gICAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjojRkFGQUZBO1xufVxuLmNlbnRlcntcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAgd2lkdGg6IDUwJTsgICAgXG4gICAgcGFkZGluZy10b3A6IDIwcHg7XG59XG4iXX0= */\";","import { Component, OnInit} from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { environment } from 'src/environments/environment';\nimport { Authentication } from '../models/autentication';\nimport { AuthenticationService } from '../services/auhentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  ionicForm: FormGroup;\n  pusername: string; \n  puserpassword : string;\n  authenticated : boolean;\n  \n  authentication = {} as Authentication;\n  aauthentication : Authentication[];\n\n  autenticacao : any;\n\n  constructor(public formBuilder: FormBuilder, private authenticationservice: AuthenticationService,\n    public atrCtrl: AlertController, private router:Router) { }\n  \n  submitForm(){\n    this.pusername = this.ionicForm.get('username').value;\n    this.puserpassword = this.ionicForm.get('userpass').value;\n    try{\n      let uData = {\n        companyLogin: this.pusername,\n        companyPassword: this.puserpassword\n      }\n      this.authenticationservice.userAuthentication(uData);\n    }catch(e){\n      console.log('error'+e)\n    }\n  }\n\n  async showInvalidCredentials(erro:any): Promise<any>{\n    const alert = await this.atrCtrl.create({\n      header:'ATENTION',\n      subHeader:'Invalid Credentials',\n      message: erro,\n      buttons: ['OK']\n    });\n    alert.present();\n  }\n\n  ngOnInit() {\n    this.ionicForm = new FormGroup({\n      username: new FormControl(),\n      userpass: new FormControl()\n    });\n    this.authenticated = false;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { HTTP } from '@ionic-native/http/ngx';\nimport { environment } from '../../environments/environment';\nimport { LocalstorageService } from './localstorage.service';\nimport { Router } from '@angular/router';\nimport { LoaderService } from '../services/loader.service';\nimport { CompanyService } from './company.service';\nimport { AlertController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  resultado : string;\n  atrCtrl: any;\n  \n  constructor(private httpClient: HttpClient, private nativeHTTP: HTTP, \n    private localstorageservice: LocalstorageService,  private route: Router,\n    private loaderservice: LoaderService, private companyservice: CompanyService,\n    public alertController: AlertController) { }\n\n  //headers\n  httpOpions = {\n    headers: new HttpHeaders({'Content-Type':'application/json'})\n  }\n\n  async errorAlert(err:string) {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'ERROR',\n      subHeader: 'Wrong username or password',\n      message: 'Error message: '+err,\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n\n  async getCompanyData(id:number, token:string){\n    let companyReturn = await this.companyservice.getCompanyById(id, token).toPromise();\n    this.localstorageservice.setValue(\"companyName\", companyReturn[\"companyName\"]);\n    this.localstorageservice.setValue(\"companyEmail\", companyReturn[\"companyEmail\"]);\n    this.localstorageservice.setValue(\"companyPhonenumber\", companyReturn[\"companyPhonenumber\"]);\n    this.localstorageservice.setValue(\"companyCellPhone\", companyReturn[\"companyCellPhone\"]);\n    this.localstorageservice.setValue(\"companyStateCode\", companyReturn[\"stateCode\"]);\n    console.log(companyReturn[\"stateCode\"]);\n    if (companyReturn[\"stateCode\"]){\n      this.route.navigate(['/tabs/feeds']);\n    }else{\n      this.route.navigate(['completeregister']);\n    }\n  }\n  //Realiza autenticação do usuário\n  async userAuthentication(userData:any){\n    var error = false;\n    var data;\n    this.loaderservice.showLoader();\n    await this.httpClient.post(environment.apiAuthentication, userData).toPromise()\n    .then(res => {\n      error = false;\n      data = res;\n    }).catch(err => {\n      error = true;\n      this.loaderservice.hideLoader();\n      this.handleError(err);\n      this.errorAlert(\"Please, verify your username and password and try again\");\n    })  \n    \n    if (!error){\n      if (data[\"token\"] !== \"\"){\n        this.loaderservice.hideLoader();\n        let user = data[\"user\"];\n        this.localstorageservice.setValue(\"token\",data[\"token\"]);\n        this.localstorageservice.setValue(\"compId\",user[\"companyId\"]);\n        this.getCompanyData(user[\"companyId\"],data[\"token\"]);\n        //console.log('statecode '+this.localstorageservice.getValue(\"companyStateCode\"));\n      }\n    }  \n  }\n\n  /*getApiToken(username:string, userpassword:string){\n    let res = this.userAuthentication(username, userpassword);\n\n    environment.token = res[\"token\"];\n    environment.empName = res[\"companyName\"];\n    environment.loginName = res[\"companyLogin\"];\n\n    console.log('No authentication');\n    console.log(environment.token);\n\n    if (environment.token != ''){\n      this.localstorageservice.setValue('token',res[\"token\"]);\n      return true\n    }else{\n      return false;\n    }\n  }*/\n\n  // Manipulação de erros\n  handleError(error: HttpErrorResponse) {\n    environment.token = '';\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Erro ocorreu no lado do client\n      errorMessage = error.error.message;\n    } else {\n      // Erro ocorreu no lado do servidor\n      errorMessage = `Código do erro: ${error.status}, ` + `menssagem: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n\n  constructor(public loadingController: LoadingController) { }\n\n  showHideAutoLoader() {\n\n    this.loadingController.create({\n      message: 'This Loader Will Auto Hide in 2 Seconds',\n      duration: 2000\n    }).then((res) => {\n      res.present();\n\n      res.onDidDismiss().then((dis) => {\n        console.log('Loading dismissed! after 2 Seconds', dis);\n      });\n    });\n\n  }\n\n  // Show the loader for infinite time\n  showLoader() {\n\n    this.loadingController.create({\n      message: 'Please wait...'\n    }).then((res) => {\n      res.present();\n    });\n\n  }\n\n  // Hide the loader if already created otherwise return error\n  hideLoader() {\n    this.loadingController.dismiss().then((res) => {\n      console.log('Loading dismissed!', res);\n    }).catch((error) => {\n      console.log('error', error);\n    });\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalstorageService {\n\n  constructor(private storage:Storage) { }\n\n  async getValue(key:string): Promise<any>{\n    let data:any;\n    await this.storage.get(key).then((val) => {\n      console.log('get '+key+' ,'+val);\n      data = val;\n    })\n    .catch((err)=>{\n      console.log('get error for '+key+' '+err);\n    });\n    return data;\n  }\n\n  setValue(key:string, value:any){\n    this.storage.set(key, value).then((res) =>{\n      console.log('set '+key+' '+res);\n      this.getValue(key);\n    }).catch((err) => {\n      console.log('set error for '+key+' '+err);\n    });\n\n    \n  }\n}\n"]}