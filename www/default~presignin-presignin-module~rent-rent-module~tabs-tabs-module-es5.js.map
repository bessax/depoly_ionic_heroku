{"version":3,"sources":["webpack:///src/app/picture-modal/picture-modal.component.html","webpack:///src/app/picture-modal/picture-modal.component.scss","webpack:///src/app/picture-modal/picture-modal.component.ts","webpack:///src/app/services/loader.service.ts","webpack:///src/app/services/localstorage.service.ts","webpack:///src/app/services/postfeed.service.ts"],"names":["PictureModalComponent","crop","camera","actionSheetController","file","localstorageservice","formBuilder","postfeedservice","myImage","croppedImage","croppedImagepath","isLoading","postFeed","geStorateData","postPhotoSel","postText","postValue","company","idCompany","get","value","productValue","date","Date","toUTCString","re","media","replace","addPrePost","token","subscribe","ret","console","log","fileUrl","quality","then","newPath","showCroppedImage","split","error","alert","ImagePath","copyPath","splitPath","imageName","length","filePath","readAsDataURL","base64","create","header","buttons","text","handler","pickImage","PictureSourceType","PHOTOLIBRARY","CAMERA","role","actionSheet","present","sourceType","options","destinationType","DestinationType","FILE_URI","encodingType","EncodingType","JPEG","mediaType","MediaType","PICTURE","getPicture","imageData","cropImage","err","lDataToken","getValue","lDataCompanyId","selector","template","LoaderService","loadingController","message","duration","res","onDidDismiss","dis","dismiss","providedIn","LocalstorageService","storage","key","val","data","set","PostfeedService","httpClient","nativeHTTP","loaderservice","httpOpions","initial","maximum","headers","apiPaginacaoAll","pipe","handleError","prepost","post","apiPagPost2","errorMessage","ErrorEvent","status"],"mappings":"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","file":"default~presignin-presignin-module~rent-rent-module~tabs-tabs-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n      <ion-avatar  slot=\\\"start\\\">\\n        <img class=\\\"imgLogoTopo\\\" src=\\\"../../assets/logos/couter_logo.png\\\">\\n      </ion-avatar>\\n    <ion-title >\\n      IMAGE PICKER\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <ion-item-divider>\\n    <!--<div class=\\\"divImg\\\">-->\\n      <img (click)=\\\"selectImage()\\\" src=\\\"{{ croppedImagepath }}\\\" alt=\\\"Selected Photo\\\"/>\\n    <!--</div>-->\\n    <!--<ion-button (click)=\\\"callExternalJS()\\\">Photo</ion-button>-->\\n  </ion-item-divider>\\n  <form [formGroup]=\\\"postPhotoSel\\\" (ngSubmit)=\\\"submitForm()\\\" novalidate>  \\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Text <ion-text color=\\\"danger\\\">*</ion-text></ion-label>\\n      <ion-input required type=\\\"text\\\" formControlName=\\\"postText\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Value <ion-text color=\\\"danger\\\">*</ion-text></ion-label>\\n      <ion-input required type=\\\"number\\\" formControlName=\\\"postValue\\\"></ion-input>\\n    </ion-item>\\n    <div>\\n      <ion-button type=\\\"submit\\\">Confirm</ion-button>\\n      <ion-button color=\\\"danger\\\">Cancel</ion-button>\\n    </div>\\n  </form>\\n</ion-content>\\n <ion-footer>\\n  <ion-toolbar>\\n    <ion-button expand=\\\"full\\\" (click)=\\\"selectImage()\\\">\\n      Get Image\\n    </ion-button>\\n  </ion-toolbar>\\n</ion-footer>\\n \\n\\n\";","export default \"ion-select {\\n  font-size: 12px;\\n  font-weight: 500;\\n}\\n\\nion-label {\\n  font-size: 12px;\\n  font-weight: 500;\\n}\\n\\nion-avatar {\\n  max-width: 25px;\\n  max-height: 25px;\\n  margin-top: 10px;\\n  margin-left: 10px;\\n  margin-bottom: 10px;\\n}\\n\\nh5 {\\n  margin-top: 0;\\n  font-size: 15px;\\n  font-weight: bold;\\n}\\n\\n.subtitle {\\n  font-size: 12px;\\n}\\n\\n.ionIcon {\\n  font-size: 20px;\\n}\\n\\n.header-class {\\n  padding-top: 4px;\\n}\\n\\nion-slides {\\n  height: 100%;\\n}\\n\\nion-slide {\\n  display: block;\\n}\\n\\nion-label, .select-text {\\n  margin-left: 10px;\\n}\\n\\n.invalid {\\n  border: 1px solid #ea6153;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGljdHVyZS1tb2RhbC9waWN0dXJlLW1vZGFsLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNFO0VBQ0UsZUFBQTtFQUNBLGdCQUFBO0FBQUo7O0FBR0U7RUFDRSxlQUFBO0VBQ0EsZ0JBQUE7QUFBSjs7QUFHRTtFQUNFLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0VBQ0EsaUJBQUE7RUFDQSxtQkFBQTtBQUFKOztBQUVFO0VBQ0UsYUFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQUNKOztBQUNBO0VBQ0ksZUFBQTtBQUVKOztBQUFBO0VBQ0ksZUFBQTtBQUdKOztBQUFBO0VBQ0ksZ0JBQUE7QUFHSjs7QUFBQTtFQUNBLFlBQUE7QUFHQTs7QUFBQTtFQUNFLGNBQUE7QUFHRjs7QUFBQTtFQUNFLGlCQUFBO0FBR0Y7O0FBQUE7RUFDRSx5QkFBQTtBQUdGIiwiZmlsZSI6InNyYy9hcHAvcGljdHVyZS1tb2RhbC9waWN0dXJlLW1vZGFsLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiIFxuICBpb24tc2VsZWN0e1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICB9XG4gIFxuICBpb24tbGFiZWx7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIH1cblxuICBpb24tYXZhdGFyIHtcbiAgICBtYXgtd2lkdGg6IDI1cHg7XG4gICAgbWF4LWhlaWdodDogMjVweDtcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIH1cbiAgaDV7XG4gICAgbWFyZ2luLXRvcDowO1xuICAgIGZvbnQtc2l6ZTogMTVweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5zdWJ0aXRsZXtcbiAgICBmb250LXNpemU6IDEycHg7XG59XG4uaW9uSWNvbntcbiAgICBmb250LXNpemU6IDIwcHg7XG59XG5cbi5oZWFkZXItY2xhc3N7XG4gICAgcGFkZGluZy10b3A6IDRweDtcbn1cblxuaW9uLXNsaWRlcyB7XG5oZWlnaHQ6IDEwMCU7XG59XG5cbmlvbi1zbGlkZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5pb24tbGFiZWwsIC5zZWxlY3QtdGV4dCB7XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xufVxuXG4uaW52YWxpZCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlYTYxNTM7XG59XG5cbiAgXG4gICJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ImageCroppedEvent } from 'ngx-image-cropper';\nimport { Observable } from 'rxjs';\nimport { Crop } from '@ionic-native/crop/ngx';\nimport { File } from '@ionic-native/file/ngx';\nimport { ActionSheetController } from '@ionic/angular';\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\nimport { LocalstorageService } from  '../services/localstorage.service';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { PostfeedService } from '../services/postfeed.service';\nimport { Postfeed } from '../models/postfeed';\nimport { formatDate } from '@angular/common';\n\n@Component({\n  selector: 'app-picture-modal',\n  templateUrl: './picture-modal.component.html',\n  styleUrls: ['./picture-modal.component.scss'],\n})\nexport class PictureModalComponent implements OnInit {\n\n  myImage = null;\n  croppedImage = null;\n\n  croppedImagepath = \"\";\n  isLoading = false;\n\n  token: any;\n  idCompany: any;\n\n  postPhotoSel: FormGroup;\n\n  postFeed = {} as Postfeed;\n\n  constructor(private crop: Crop, private camera: Camera,\n    public actionSheetController: ActionSheetController, private file: File,\n    private localstorageservice: LocalstorageService, public formBuilder: FormBuilder,\n    private postfeedservice:PostfeedService) { }\n\n  ngOnInit() {\n    this.geStorateData();\n    this.postPhotoSel = new FormGroup({\n      postText : new FormControl(),//'', Validators.compose([Validators.required, CompanyValidator.isValid])),\n      postValue : new FormControl()\n    });\n  }\n\n  submitForm(){\n    this.postFeed.company = this.idCompany;\n    this.postFeed.postText = this.postPhotoSel.get('postText').value;\n    this.postFeed.productValue = this.postPhotoSel.get('postValue').value;\n    let date = new Date().toUTCString();\n    //this.postFeed.postDate = formatDate()  date;\n\n    var re = \"data:image/jpeg;base64,\"; \n    this.postFeed.media = this.croppedImagepath.replace(re,\"\");\n\n    this.postfeedservice.addPrePost(this.postFeed, this.token).subscribe((ret)=>{\n      console.log(ret);\n    });\n    //console.log('Pelo menos clicou');\n  }\n\n  cropImage(fileUrl) {\n    this.crop.crop(fileUrl, { quality: 100 })\n      .then(\n        newPath => {\n          this.showCroppedImage(newPath.split('?')[0])\n        },\n        error => {\n          alert('Error cropping image' + error);\n        }\n      );\n  }\n\n  showCroppedImage(ImagePath) {\n    this.isLoading = true;\n    var copyPath = ImagePath;\n    var splitPath = copyPath.split('/');\n    var imageName = splitPath[splitPath.length - 1];\n    var filePath = ImagePath.split(imageName)[0];\n\n    this.file.readAsDataURL(filePath, imageName).then(base64 => {\n      this.croppedImagepath = base64;\n      this.isLoading = false;\n    }, error => {\n      alert('Error in showing image' + error);\n      this.isLoading = false;\n    });\n  }\n\n  async selectImage() {\n    const actionSheet = await this.actionSheetController.create({\n      header: \"Select Image source\",\n      buttons: [{\n        text: 'Load from Library',\n        handler: () => {\n          this.pickImage(this.camera.PictureSourceType.PHOTOLIBRARY);\n        }\n      },\n      {\n        text: 'Use Camera',\n        handler: () => {\n          this.pickImage(this.camera.PictureSourceType.CAMERA);\n        }\n      },\n      {\n        text: 'Cancel',\n        role: 'cancel'\n      }\n      ]\n    });\n    await actionSheet.present();\n  }\n\n  pickImage(sourceType) {\n    const options: CameraOptions = {\n      quality: 100,\n      sourceType: sourceType,\n      destinationType: this.camera.DestinationType.FILE_URI,\n      encodingType: this.camera.EncodingType.JPEG,\n      mediaType: this.camera.MediaType.PICTURE\n    }\n    this.camera.getPicture(options).then((imageData) => {\n      // imageData is either a base64 encoded string or a file URI\n      // If it's base64 (DATA_URL):\n      // let base64Image = 'data:image/jpeg;base64,' + imageData;\n      this.cropImage(imageData)\n    }, (err) => {\n      // Handle error\n    });\n  }\n  \n  geStorateData(){\n    let lDataToken = this.localstorageservice.getValue(\"token\").then((value) =>{\n      this.token = value;\n    }).catch((err) =>{\n      console.log(\"Error to get token\");\n    });\n    let lDataCompanyId = this.localstorageservice.getValue(\"compId\").then((value) =>{\n      this.idCompany = value;\n    }).catch((err) =>{\n      console.log(\"Error to get Company Id\");\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n\n  constructor(public loadingController: LoadingController) { }\n\n  showHideAutoLoader() {\n\n    this.loadingController.create({\n      message: 'This Loader Will Auto Hide in 2 Seconds',\n      duration: 2000\n    }).then((res) => {\n      res.present();\n\n      res.onDidDismiss().then((dis) => {\n        console.log('Loading dismissed! after 2 Seconds', dis);\n      });\n    });\n\n  }\n\n  // Show the loader for infinite time\n  showLoader() {\n\n    this.loadingController.create({\n      message: 'Please wait...'\n    }).then((res) => {\n      res.present();\n    });\n\n  }\n\n  // Hide the loader if already created otherwise return error\n  hideLoader() {\n    this.loadingController.dismiss().then((res) => {\n      console.log('Loading dismissed!', res);\n    }).catch((error) => {\n      console.log('error', error);\n    });\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalstorageService {\n\n  constructor(private storage:Storage) { }\n\n  async getValue(key:string): Promise<any>{\n    let data:any;\n    await this.storage.get(key).then((val) => {\n      console.log('get '+key+' ,'+val);\n      data = val;\n    })\n    .catch((err)=>{\n      console.log('get error for '+key+' '+err);\n    });\n    return data;\n  }\n\n  setValue(key:string, value:any){\n    this.storage.set(key, value).then((res) =>{\n      console.log('set '+key+' '+res);\n      this.getValue(key);\n    }).catch((err) => {\n      console.log('set error for '+key+' '+err);\n    });\n\n    \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport { Postfeed } from '../models/postfeed';\nimport { HTTP } from '@ionic-native/http/ngx';\nimport { environment } from 'src/environments/environment';\nimport { LocalstorageService } from './localstorage.service';\nimport { LoaderService } from './loader.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostfeedService {\n\n  httpOpions = {};\n\n  constructor(private httpClient: HttpClient, private nativeHTTP: HTTP,\n    private localstorageservice:LocalstorageService, private loaderservice:LoaderService) { }\n\n  getPagPost(initial:number, maximum:number, token:any): Observable<Postfeed[]>{   \n    console.log(token);\n\n    this.httpOpions = {\n      headers: new HttpHeaders({'Authorization':'Bearer '+token})\n    }\n\n    return this.httpClient.get<Postfeed[]>(environment.apiPaginacaoAll+'pagina='+initial+'&qtdRegistry='+maximum, this.httpOpions)\n    .pipe(\n      retry(2),\n      catchError(this.handleError)\n    )\n  }\n\n  addPrePost(prepost: Postfeed, token:any): Observable<Postfeed>{\n    //this.showConfirm('invocando a api')\n      this.httpOpions = {\n        headers: new HttpHeaders({'Authorization':'Bearer '+token})\n      }\n      console.log(prepost);\n       return this.httpClient.post<Postfeed>(environment.apiPagPost2,prepost,this.httpOpions)\n       .pipe(\n         retry(2),\n         catchError(this.handleError)\n       )\n  }\n\n  // Manipulação de erros\n  handleError(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Erro ocorreu no lado do client\n      errorMessage = error.error.message;\n    } else {\n      // Erro ocorreu no lado do servidor\n      errorMessage = `Código do erro: ${error.status}, ` + `menssagem: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n"]}